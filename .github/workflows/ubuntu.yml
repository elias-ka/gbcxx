name: Ubuntu CI

on:
  push:
    branches:
      - main
    paths:
      - "3rdparty/**"
      - "cmake/**"
      - "src/**"
      - ".github/workflows/ubuntu.yml"
      - "**/CMakeLists.txt"
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Cache build dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            ~/.cache/CPM
            ./build/gbcxx-release/
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -yq \
            build-essential git make \
            pkg-config ccache clang cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev \
            libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev \
            libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxtst-dev \
            libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
            libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev libglew-dev \
            libpipewire-0.3-dev libwayland-dev libdecor-0-dev liburing-dev

  native-build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Configure CMake
        run: |
          cmake --preset=release -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DSDL_UNIX_CONSOLE_BUILD=ON

      - name: Build Native
        run: |
          ninja -C build/gbcxx-release
          chmod +x ./build/gbcxx-release/gbcxx

      - name: Upload Native Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gbcxx-ubuntu-latest
          path: ./build/gbcxx-release/gbcxx

  emscripten-build:
    runs-on: ubuntu-latest
    needs: setup
    # Only run manually
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: "latest"
          actions-cache-folder: "emsdk-cache"

      - name: Verify emsdk installation
        run: emcc -v

      - name: Configure CMake
        run: emcmake cmake --preset=release

      - name: Build Wasm
        run: ninja -C build/gbcxx-release

  deploy-to-github-pages:
    needs: emscripten-build
    # Only run manually
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./build/gbcxx-release/gbcxx.html"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
