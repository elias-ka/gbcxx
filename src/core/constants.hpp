#pragma once

#include <cstddef>
#include <cstdint>

namespace gbcxx {
constexpr size_t screen_width = 160;
constexpr size_t screen_height = 144;

enum Bus_Area : uint16_t {
    cartridge_start = 0x0000,
    cartridge_end = 0x7FFF,
    vram_start = 0x8000,
    vram_end = 0x9FFF,
    external_ram_start = 0xA000,
    external_ram_end = 0xBFFF,
    work_ram_start = 0xC000,
    work_ram_end = 0xDFFF,
    echo_ram_start = 0xE000,
    echo_ram_end = 0xFDFF,
    oam_start = 0xFE00,
    oam_end = 0xFE9F,
    not_usable_start = 0xFEA0,
    not_usable_end = 0xFEFF,
    io_start = 0xFF00,
    io_end = 0xFF7F,
    high_ram_start = 0xFF80,
    high_ram_end = 0xFFFE,
};

enum Io_Reg : uint16_t {
    joyp = 0xFF00,
    sb = 0xFF01,
    sc = 0xFF02,
    div = 0xFF04,
    tima = 0xFF05,
    tma = 0xFF06,
    tac = 0xFF07,
    if_ = 0xFF0F,
    nr10 = 0xFF10,
    nr11 = 0xFF11,
    nr12 = 0xFF12,
    nr13 = 0xFF13,
    nr14 = 0xFF14,
    nr21 = 0xFF16,
    nr22 = 0xFF17,
    nr23 = 0xFF18,
    nr24 = 0xFF19,
    nr30 = 0xFF1A,
    nr31 = 0xFF1B,
    nr32 = 0xFF1C,
    nr33 = 0xFF1D,
    nr34 = 0xFF1E,
    nr41 = 0xFF20,
    nr42 = 0xFF21,
    nr43 = 0xFF22,
    nr44 = 0xFF23,
    nr50 = 0xFF24,
    nr51 = 0xFF25,
    nr52 = 0xFF26,
    wave_pattern_start = 0xFF30,
    wave_pattern_end = 0xFF3F,
    lcdc = 0xFF40,
    stat = 0xFF41,
    scy = 0xFF42,
    scx = 0xFF43,
    ly = 0xFF44,
    lyc = 0xFF45,
    bgp = 0xFF47,
    obp0 = 0xFF48,
    obp1 = 0xFF49,
    wy = 0xFF4A,
    wx = 0xFF4B,
    key1 = 0xFF4D,
    vbk = 0xFF4F,
    bootrom = 0xFF50,
    hdma1 = 0xFF51,
    hdma2 = 0xFF52,
    hdma3 = 0xFF53,
    hdma4 = 0xFF54,
    hdma5 = 0xFF55,
    rp = 0xFF56,
    bcps = 0xFF68,
    bcpd = 0xFF69,
    ocps = 0xFF6A,
    ocpd = 0xFF6B,
    opri = 0xFF6C,
    svbk = 0xFF70,
    pcm12 = 0xFF76,
    pcm34 = 0xFF77,
    ie = 0xFFFF,
};
} // namespace gbcxx
